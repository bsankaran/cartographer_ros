<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from scaled_jackal.urdf.xacro       | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!--
Software License: http://www.binpress.com/license/view/l/8ef75db882b3f91ba42b114142f3e8b3

\file      scaled_jackal.urdf.xacro
\authors   Bharath Sankaran <bharath@scaledrobotics.com>
\copyright Copyright (c) 2018, Scaled Robotics, SL., All rights reserved.

Redistribution prohibited without prior written consent
-->
<robot name="jackal_robot" xmlns:xacro="http://ros.org/wiki/xacro">
  <material name="dark_grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="light_grey">
    <color rgba="0.4 0.4 0.4 1.0"/>
  </material>
  <material name="yellow">
    <color rgba="0.8 0.8 0.0 1.0"/>
  </material>
  <!-- <material name="black"><color rgba="0.15 0.15 0.15 1.0" /></material>-->
  <link name="front_left_wheel_link">
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.098"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="front_left_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <joint name="front_left_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="front_left_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.131 0.187795 0.0345"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, Jackal has only two motors, one per side. However, it's more
         straightforward for Gazebo to simulate as if there's an actuator per wheel. -->
  <transmission name="front_left_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="front_left_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="front_left_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="front_right_wheel_link">
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.098"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="front_right_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <joint name="front_right_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="front_right_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.131 -0.187795 0.0345"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, Jackal has only two motors, one per side. However, it's more
         straightforward for Gazebo to simulate as if there's an actuator per wheel. -->
  <transmission name="front_right_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="front_right_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="front_right_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="rear_left_wheel_link">
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.098"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="rear_left_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <joint name="rear_left_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="rear_left_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.131 0.187795 0.0345"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, Jackal has only two motors, one per side. However, it's more
         straightforward for Gazebo to simulate as if there's an actuator per wheel. -->
  <transmission name="rear_left_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="rear_left_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="rear_left_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="rear_right_wheel_link">
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.098"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="rear_right_wheel_link">
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  <joint name="rear_right_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="rear_right_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.131 -0.187795 0.0345"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, Jackal has only two motors, one per side. However, it's more
         straightforward for Gazebo to simulate as if there's an actuator per wheel. -->
  <transmission name="rear_right_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="rear_right_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="rear_right_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="base_link"/>
  <joint name="base_link_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="chassis_link"/>
  </joint>
  <link name="chassis_link">
    <visual>
      <origin rpy="1.57079632679 0 1.57079632679" xyz="0 0 -0.0655"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-base.stl"/>
      </geometry>
      <material name="dark_grey"/>
    </visual>
    <collision>
      <origin xyz="0 0 0.092"/>
      <geometry>
        <box size="0.42 0.31 0.184"/>
      </geometry>
    </collision>
    <inertial>
      <!-- Center of mass -->
      <origin rpy="0 0 0" xyz="0.012  0.002 0.067"/>
      <mass value="16.523"/>
      <!-- Moments of inertia: ( chassis without wheels ) -->
      <inertia ixx="0.3136" ixy="-0.0008" ixz="0.0164" iyy="0.3922" iyz="-0.0009" izz="0.4485"/>
    </inertial>
  </link>
  <link name="front_fender_link">
    <visual>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-fender.stl"/>
      </geometry>
      <material name="yellow"/>
    </visual>
  </link>
  <joint name="front_fender_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="chassis_link"/>
    <child link="front_fender_link"/>
  </joint>
  <link name="rear_fender_link">
    <visual>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-fender.stl"/>
      </geometry>
      <material name="yellow"/>
    </visual>
  </link>
  <joint name="rear_fender_joint" type="fixed">
    <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
    <parent link="chassis_link"/>
    <child link="rear_fender_link"/>
  </joint>
  <link name="jackal_imu_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-09" ixy="0.0" ixz="0.0" iyy="1e-09" iyz="0.0" izz="1e-09"/>
    </inertial>
  </link>
  <joint name="imu_joint" type="fixed">
    <parent link="chassis_link"/>
    <child link="jackal_imu_link"/>
  </joint>
  <!--  IMU Controller for Gazebo -->
  <gazebo reference="jackal_imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <robotNamespace>/</robotNamespace>
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>jackal_imu_link</bodyName>
        <updateRateHZ>50.0</updateRateHZ>
        <gaussianNoise>0.005</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>jackal_imu_link</frameName>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>
  <link name="jackal_navsat_link">
    <visual>
      <geometry>
        <cylinder length="0.016" radius="0.026"/>
      </geometry>
      <origin xyz="0 0 0.008"/>
      <material name="black"/>
    </visual>
  </link>
  <joint name="navsat_joint" type="fixed">
    <parent link="chassis_link"/>
    <child link="jackal_navsat_link"/>
    <origin xyz="-0.180 0.126 0.1815"/>
  </joint>
  <link name="mid_mount"/>
  <joint name="mid_mount_joint" type="fixed">
    <parent link="chassis_link"/>
    <child link="mid_mount"/>
    <origin xyz="0 0 0.184"/>
  </joint>
  <link name="rear_mount"/>
  <joint name="rear_mount_joint" type="fixed">
    <parent link="mid_mount"/>
    <child link="rear_mount"/>
    <origin xyz="-0.12 0 0"/>
  </joint>
  <link name="front_mount"/>
  <joint name="front_mount_joint" type="fixed">
    <parent link="mid_mount"/>
    <child link="front_mount"/>
    <origin xyz="0.12 0 0"/>
  </joint>
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/</robotNamespace>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_imu.so" name="imu_controller">
      <robotNamespace>/</robotNamespace>
      <updateRate>50.0</updateRate>
      <bodyName>imu_link</bodyName>
      <topicName>imu/data</topicName>
      <accelDrift>0.005 0.005 0.005</accelDrift>
      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
      <rateDrift>0.005 0.005 0.005 </rateDrift>
      <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
      <headingDrift>0.005</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_gps.so" name="gps_controller">
      <updateRate>40</updateRate>
      <robotNamespace>/</robotNamespace>
      <bodyName>navsat_link</bodyName>
      <frameId>base_link</frameId>
      <topicName>/navsat/fix</topicName>
      <velocityTopicName>/navsat/vel</velocityTopicName>
      <referenceLatitude>49.9</referenceLatitude>
      <referenceLongitude>8.9</referenceLongitude>
      <referenceHeading>0</referenceHeading>
      <referenceAltitude>0</referenceAltitude>
      <drift>0.0001 0.0001 0.0001</drift>
    </plugin>
  </gazebo>
  <gazebo reference="base_link">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <gazebo reference="chassis_link">
    <material>Gazebo/DarkGrey</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <gazebo reference="imu_link">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <gazebo reference="navsat_link">
    <material>Gazebo/DarkGrey</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <gazebo reference="front_fender_link">
    <material>Gazebo/Yellow</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <gazebo reference="rear_fender_link">
    <material>Gazebo/Yellow</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <!--
    As you add to this URDF, please be aware that both the robot and
    simulation include it. You must retain compatibility with all of
    the following launch files:

    jackal_viz/launch/view_model.launch
    jackal_gazebo/launch/jackal_world.launch
    jackal_base/launch/base.launch
  -->
  <!-- This file is a placeholder which is included by default from
       jackal.urdf.xacro. If a robot is being customized and requires
       additional URDF, set the JACKAL_URDF_EXTRAS environment variable
       to the full path of the file you would like included. -->
  <!-- zed_camera_link -->
  <link name="zed_camera_link"/>
  <!-- Camera Center -->
  <joint name="zed_camera_center_joint" type="fixed">
    <parent link="zed_camera_link"/>
    <child link="zed_camera_center"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  <link name="zed_camera_center">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://zed_wrapper/urdf/models/ZEDM.stl"/>
      </geometry>
      <material name="light_grey">
        <color rgba="0 0 0 0.9"/>
      </material>
    </visual>
  </link>
  <!-- Left Camera -->
  <joint name="zed_left_camera_joint" type="fixed">
    <parent link="zed_camera_center"/>
    <child link="zed_left_camera_frame"/>
    <origin rpy="0 0 0" xyz="0 0.03 0"/>
  </joint>
  <link name="zed_left_camera_frame"/>
  <joint name="zed_left_camera_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
    <parent link="zed_left_camera_frame"/>
    <child link="zed_left_camera_optical_frame"/>
  </joint>
  <link name="zed_left_camera_optical_frame"/>
  <!-- Right Camera -->
  <joint name="zed_right_camera_joint" type="fixed">
    <parent link="zed_camera_center"/>
    <child link="zed_right_camera_frame"/>
    <origin rpy="0 0 0" xyz="0 -0.03 0"/>
  </joint>
  <link name="zed_right_camera_frame"/>
  <joint name="zed_right_camera_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
    <parent link="zed_right_camera_frame"/>
    <child link="zed_right_camera_optical_frame"/>
  </joint>
  <link name="zed_right_camera_optical_frame"/>
  <!-- IMU -->
  <joint name="imu_link_joint" type="fixed">
    <parent link="zed_camera_center"/>
    <child link="zed_imu_link"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  <link name="zed_imu_link"/>
  <!-- wrt the upper surface of the top plate -->
  <!-- <xacro:property name="sensor_rig_roll"      value="0.0" /> 
   <xacro:property name="sensor_rig_pitch"     value="0.0" /> 
   <xacro:property name="sensor_rig_yaw"       value="0.0" /> -->
  <!-- Monocular cameras -->
  <!-- The reference frame for the monocular cameras is on the surface at the bottom of the lens cilinder, aligned with
       the cilinder's axis (roughly at the focal plane = lens - focal length) -->
  <!-- Included sensor and calibration URDF/XACRO Files -->
  <material name="gray">
    <color rgba="0.5 0.5 0.5 0.8"/>
  </material>
  <material name="black">
    <color rgba="0.0 0.0 0.0 0.8"/>
  </material>
  <!-- IMU link -->
  <link name="imu_link"/>
  <material name="blue">
    <color rgba="0.0 0.0 1.0 1.0"/>
  </material>
  <joint name="asus_front_joint" type="fixed">
    <origin rpy="3.14159 0.034 0.0" xyz="0.113 0 -0.1029"/>
    <parent link="sensor_rig_link"/>
    <child link="asus_front_link"/>
  </joint>
  <link name="asus_front_link">
    <inertial>
      <mass value="0.200"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="5.8083e-4" ixy="0" ixz="0" iyy="3.0833e-5" iyz="0" izz="5.9083e-4"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://sr_sensor_unit/meshes/asus_camera/asus_camera_simple.dae"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <!--        
       <collision>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>
            <box size="0.035 0.185 0.025"/>
          </geometry>
        </collision>
        -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://sr_sensor_unit/meshes/asus_camera/asus_camera_simple.dae"/>
      </geometry>
    </collision>
  </link>
  <joint name="asus_front_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.049 0.0"/>
    <parent link="asus_front_link"/>
    <child link="asus_front_depth_frame"/>
  </joint>
  <link name="asus_front_depth_frame"/>
  <joint name="asus_front_depth_optical_joint" type="fixed">
    <origin rpy="-1.570795 0.0 -1.570795" xyz="0 0 0"/>
    <parent link="asus_front_depth_frame"/>
    <child link="asus_front_depth_optical_frame"/>
  </joint>
  <link name="asus_front_depth_optical_frame"/>
  <joint name="asus_front_rgb_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.022 0.0"/>
    <parent link="asus_front_link"/>
    <child link="asus_front_rgb_frame"/>
  </joint>
  <link name="asus_front_rgb_frame"/>
  <joint name="asus_front_rgb_optical_joint" type="fixed">
    <origin rpy="-1.570795 0.0 -1.570795" xyz="0 0 0"/>
    <parent link="asus_front_rgb_frame"/>
    <child link="asus_front_rgb_optical_frame"/>
  </joint>
  <link name="asus_front_rgb_optical_frame"/>
  <!-- ASUS Xtion PRO camera for simulation -->
  <gazebo reference="asus_front_depth_frame">
    <sensor name="asus_front" type="depth">
      <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>1.09606584444</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.5</near>
          <far>9</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="asus_front_camera_controller">
        <imageTopicName>asus_front/rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>asus_front/rgb/camera_info</cameraInfoTopicName>
        <depthImageTopicName>asus_front/depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>asus_front/depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>asus_front/depth/points</pointCloudTopicName>
        <frameName>asus_front_depth_optical_frame</frameName>
        <!-- adapted from husky kinect-->
        <baseline>0.1</baseline>
        <distortion_k1>0.0</distortion_k1>
        <distortion_k2>0.0</distortion_k2>
        <distortion_k3>0.0</distortion_k3>
        <distortion_t1>0.0</distortion_t1>
        <distortion_t2>0.0</distortion_t2>
        <pointCloudCutoff>0.4</pointCloudCutoff>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="zed_camera_joint" type="fixed">
    <origin rpy="0.0 0.0 0.0" xyz="0.086 0.0 -0.1151"/>
    <parent link="sensor_rig_link"/>
    <child link="zed_camera_link"/>
  </joint>
  <joint name="zed_imu_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="zed_imu_link"/>
    <child link="imu_link"/>
  </joint>
  <!-- Base link is the center of the robot's bottom plate -->
  <!-- Strut link is the middle point in the lower, front edge of the strut -->
  <link name="strut_link">
    <visual>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0725"/>
      <geometry>
        <box size="0.156 0.075 0.145"/>
      </geometry>
      <material name="gray"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0725"/>
      <geometry>
        <box size="0.156 0.075 0.145"/>
      </geometry>
    </collision>
  </link>
  <joint name="strut_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
    <parent link="front_mount"/>
    <child link="strut_link"/>
  </joint>
  <link name="top_strut_link">
  </link>
  <joint name="top_strut_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.145"/>
    <parent link="strut_link"/>
    <child link="top_strut_link"/>
  </joint>
  <link name="sensor_rig_link">
  </link>
  <!-- base of the sensor rig -->
  <joint name="sensor_rig_joint" type="fixed">
    <origin rpy="0.004233606684 -0.00652498469164 -0.000405624647522" xyz="0 0 0"/>
    <parent link="top_strut_link"/>
    <child link="sensor_rig_link"/>
  </joint>
  <joint name="velodyne_base_mount_joint" type="fixed">
    <origin rpy="0.0 0.0 0.0" xyz="0.017 0.0 0.0"/>
    <parent link="sensor_rig_link"/>
    <child link="velodyne_base_link"/>
  </joint>
  <link name="velodyne_base_link">
    <inertial>
      <mass value="0.83"/>
      <origin xyz="0 0 0.03585"/>
      <inertia ixx="0.000908059425" ixy="0" ixz="0" iyy="0.000908059425" iyz="0" izz="0.0011049624"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://velodyne_description/meshes/VLP16_base_1.dae"/>
      </geometry>
    </visual>
    <visual>
      <geometry>
        <mesh filename="package://velodyne_description/meshes/VLP16_base_2.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.03585"/>
      <geometry>
        <cylinder length="0.0717" radius="0.0516"/>
      </geometry>
    </collision>
  </link>
  <joint name="velodyne_base_scan_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.0377"/>
    <parent link="velodyne_base_link"/>
    <child link="velodyne"/>
  </joint>
  <link name="velodyne">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1e-7" ixy="0" ixz="0" iyy="1e-7" iyz="0" izz="1e-7"/>
    </inertial>
    <visual>
      <origin xyz="0 0 -0.0377"/>
      <geometry>
        <mesh filename="package://velodyne_description/meshes/VLP16_scan.dae"/>
      </geometry>
    </visual>
  </link>
  <!-- Gazebo requires the velodyne_gazebo_plugins package -->
  <gazebo reference="velodyne">
    <sensor name="velodyne-VLP16" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>20</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>600</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-0.261799166667</min_angle>
            <max_angle> 0.261799166667</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.3</min>
          <max>131.0</max>
          <resolution>0.001</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_velodyne_laser.so" name="gazebo_ros_laser_controller">
        <topicName>/velodyne_points</topicName>
        <frameName>velodyne</frameName>
        <min_range>0.5</min_range>
        <max_range>130.0</max_range>
        <gaussianNoise>0.0</gaussianNoise>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="rslidar_base_mount_joint" type="fixed">
    <origin rpy="-1.80184847777 1.60493864434 1.33820886962" xyz="-0.105116 0.00430927 -0.0781846"/>
    <parent link="sensor_rig_link"/>
    <child link="rslidar_base_link"/>
  </joint>
  <link name="rslidar_base_link">
    <inertial>
      <mass value="0.83"/>
      <origin xyz="0 0 0.03585"/>
      <inertia ixx="0.000908059425" ixy="0" ixz="0" iyy="0.000908059425" iyz="0" izz="0.0011049624"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://velodyne_description/meshes/VLP16_base_1.dae"/>
      </geometry>
    </visual>
    <visual>
      <geometry>
        <mesh filename="package://velodyne_description/meshes/VLP16_base_2.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.03585"/>
      <geometry>
        <cylinder length="0.0717" radius="0.0516"/>
      </geometry>
    </collision>
  </link>
  <joint name="rslidar_base_scan_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.0377"/>
    <parent link="rslidar_base_link"/>
    <child link="rslidar"/>
  </joint>
  <link name="rslidar">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1e-7" ixy="0" ixz="0" iyy="1e-7" iyz="0" izz="1e-7"/>
    </inertial>
    <visual>
      <origin xyz="0 0 -0.0377"/>
      <geometry>
        <mesh filename="package://velodyne_description/meshes/VLP16_scan.dae"/>
      </geometry>
    </visual>
  </link>
  <!-- Gazebo requires the velodyne_gazebo_plugins package -->
  <gazebo reference="rslidar">
    <sensor name="rslidar-VLP16" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>20</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>600</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-0.261799166667</min_angle>
            <max_angle> 0.261799166667</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.3</min>
          <max>131.0</max>
          <resolution>0.001</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_velodyne_laser.so" name="gazebo_ros_laser_controller">
        <topicName>/rslidar_points</topicName>
        <frameName>rslidar</frameName>
        <min_range>0.5</min_range>
        <max_range>130.0</max_range>
        <gaussianNoise>0.0</gaussianNoise>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="top_camera_joint" type="fixed">
    <origin rpy="0.0 -0.523598333333 0.0" xyz="0.09155 0.0 -0.02488"/>
    <parent link="sensor_rig_link"/>
    <child link="top_camera_link"/>
  </joint>
  <link name="top_camera_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.036 0.036 0.020"/>
      </geometry>
      <material name="Blue">
        <color rgba="0.0 0.0 0.8 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.036 0.036 0.020"/>
      </geometry>
    </collision>
  </link>
  <joint name="top_camera_optical_joint" type="fixed">
    <origin rpy="-1.570795 0.0 -1.570795" xyz="0 0 0"/>
    <parent link="top_camera_link"/>
    <child link="top_camera_optical_frame"/>
  </joint>
  <link name="top_camera_optical_frame"/>
  <gazebo reference="top_camera_link">
    <sensor name="top_camera_camera_sensor" type="camera">
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>3.05432361111</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>1280</width>
          <height>960</height>
        </image>
        <clip>
          <near>0.01</near>
          <far>100</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="top_camera_camera_controller">
        <cameraName>top_camera</cameraName>
        <imageTopicName>/top_camera</imageTopicName>
        <cameraInfoTopicName>/top_camera_info</cameraInfoTopicName>
        <frameName>top_camera_optical_frame</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="right_camera_joint" type="fixed">
    <origin rpy="0.0 -0.523598333333 -2.09439333333" xyz="-0.043 -0.09155 -0.02488"/>
    <parent link="sensor_rig_link"/>
    <child link="right_camera_link"/>
  </joint>
  <link name="right_camera_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.036 0.036 0.020"/>
      </geometry>
      <material name="Blue">
        <color rgba="0.0 0.0 0.8 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.036 0.036 0.020"/>
      </geometry>
    </collision>
  </link>
  <joint name="right_camera_optical_joint" type="fixed">
    <origin rpy="-1.570795 0.0 -1.570795" xyz="0 0 0"/>
    <parent link="right_camera_link"/>
    <child link="right_camera_optical_frame"/>
  </joint>
  <link name="right_camera_optical_frame"/>
  <gazebo reference="right_camera_link">
    <sensor name="right_camera_camera_sensor" type="camera">
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>3.05432361111</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>1280</width>
          <height>960</height>
        </image>
        <clip>
          <near>0.01</near>
          <far>100</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="right_camera_camera_controller">
        <cameraName>right_camera</cameraName>
        <imageTopicName>/right_camera</imageTopicName>
        <cameraInfoTopicName>/right_camera_info</cameraInfoTopicName>
        <frameName>right_camera_optical_frame</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="left_camera_joint" type="fixed">
    <origin rpy="0.0 -0.523598333333 2.09439333333" xyz="-0.043 0.09155 -0.02488"/>
    <parent link="sensor_rig_link"/>
    <child link="left_camera_link"/>
  </joint>
  <link name="left_camera_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.036 0.036 0.020"/>
      </geometry>
      <material name="Blue">
        <color rgba="0.0 0.0 0.8 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.036 0.036 0.020"/>
      </geometry>
    </collision>
  </link>
  <joint name="left_camera_optical_joint" type="fixed">
    <origin rpy="-1.570795 0.0 -1.570795" xyz="0 0 0"/>
    <parent link="left_camera_link"/>
    <child link="left_camera_optical_frame"/>
  </joint>
  <link name="left_camera_optical_frame"/>
  <gazebo reference="left_camera_link">
    <sensor name="left_camera_camera_sensor" type="camera">
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>3.05432361111</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>1280</width>
          <height>960</height>
        </image>
        <clip>
          <near>0.01</near>
          <far>100</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="left_camera_camera_controller">
        <cameraName>left_camera</cameraName>
        <imageTopicName>/left_camera</imageTopicName>
        <cameraInfoTopicName>/left_camera_info</cameraInfoTopicName>
        <frameName>left_camera_optical_frame</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Image links -->
  <link name="top_camera_image_link"/>
  <joint name="top_camera_optic_joint" type="fixed">
    <origin rpy="0 0 3.14159" xyz="0 0 0"/>
    <parent link="top_camera_link"/>
    <child link="top_camera_image_link"/>
  </joint>
  <link name="right_camera_image_link"/>
  <joint name="right_camera_optic_joint" type="fixed">
    <origin rpy="0 0 3.14159" xyz="0 0 0"/>
    <parent link="right_camera_link"/>
    <child link="right_camera_image_link"/>
  </joint>
  <link name="left_camera_image_link"/>
  <joint name="left_camera_optic_joint" type="fixed">
    <origin rpy="0 0 3.14159" xyz="0 0 0"/>
    <parent link="left_camera_link"/>
    <child link="left_camera_image_link"/>
  </joint>
</robot>
